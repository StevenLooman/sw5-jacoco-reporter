_package sw

def_slotted_exemplar(
	:other_test,
	{},
	{:test_case})
$

_pragma(classify_level=debug, topic={xsd_loader})
_method other_test.test_integer_plus_100()
    _local val << 150

    _local expected << 250
    _local actual << val.plus_100()

    _self.assert_equals(expected, actual)
_endmethod
$

_pragma(classify_level=debug, topic={xsd_loader})
_method other_test.test_float_plus_100()
    _local val << 150.0

    _local expected << 250.0
    _local actual << val.plus_100()

    _self.assert_equals(expected, actual)
_endmethod
$

_pragma(classify_level=debug, topic={xsd_loader})
_method other_test.test_symbol_with_suffix()
    _local val << :abc

    _local expected << :abc_suffix
    _local actual << val.with_suffix()

    _self.assert_equals(expected, actual)
_endmethod
$

_pragma(classify_level=debug, topic={xsd_loader})
_method other_test.test_call_prc_with_name()
    _local expected << :from_prc_with_name
    _local actual << prc_with_name()

    _self.assert_equals(expected, actual)
_endmethod
$
